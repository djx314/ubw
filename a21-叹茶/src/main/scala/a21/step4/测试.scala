package a21.step4

object 测试 {

  class 匹配[T]

  object 匹配 {
    def apply[T]: 匹配[T]                          = new 匹配[T]
    def 匹配[T](i1: 匹配[T], i2: 匹配[T]): List[匹配[T]] = List(i1, i2)
  }

  class 水1
  class 水2
  class 水3
  class 水4
  class 水5
  class 水6
  class 水7
  class 水8

  type 满水线1 = 斟水线[斟水线[斟水线[满水线]]]
  type 空茶杯1 = 空茶杯[满水线1]

  匹配.匹配(匹配[空茶杯1#斟茶[水1]#斟茶[水2]], 匹配[有水茶杯[斟水线[斟水线[满水线]], 有茶[空茶, 水1], 水2]])
  匹配.匹配(匹配[空茶杯1#斟茶[水1]#斟茶[水2]#斟茶[水3]#斟茶[水4]], 匹配[有水茶杯[满水线, 有茶[有茶[有茶[空茶, 水1], 水2], 水3], 水4]])
  匹配.匹配(匹配[空茶杯1#斟茶[水1]#斟茶[水2]#斟茶[水3]#斟茶[水4]#斟茶[水5]], 匹配[加盖茶杯[有茶[有茶[有茶[空茶, 水1], 水2], 水3], 水4]])

  匹配.匹配(匹配[空茶杯1#斟茶[水1]#斟茶[水2]#斟茶[水3]#斟茶[水4]#叹茶#叹茶#叹茶#叹茶], 匹配[空茶杯1])
  匹配.匹配(匹配[空茶杯1#斟茶[水1]#斟茶[水2]#斟茶[水3]#斟茶[水4]#叹茶#叹茶#叹茶#叹茶#斟茶[水1]#斟茶[水2]], 匹配[有水茶杯[斟水线[斟水线[满水线]], 有茶[空茶, 水1], 水2]])
  匹配.匹配(匹配[空茶杯1#斟茶[水1]#斟茶[水2]#斟茶[水3]#斟茶[水4]#斟茶[水5]#叹茶#叹茶#叹茶#叹茶], 匹配[有水茶杯[斟水线[斟水线[斟水线[满水线]]], 空茶, 水1]])

  匹配.匹配(匹配[空茶杯1#斟茶[水1]#斟茶[水2]#斟茶[水3]#斟茶[水4]#斟茶[水5]#叹茶#叹茶#叹茶#叹茶#叹茶], 匹配[空茶杯1])
  匹配.匹配(匹配[空茶杯1#斟茶[水1]#叹茶], 匹配[空茶杯1])

}
