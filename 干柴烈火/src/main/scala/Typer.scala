import scala.language.higherKinds

trait Typer {

  type 柴1 = 没有肉的锅#加肉[熟透的肉#需要热量#需要热量#需要热量]#加肉[熟透的肉#需要热量#需要热量]#加肉[熟透的肉#需要热量#需要热量]#加肉[熟透的肉#需要热量]

  type 柴2 = 柴1#升温
  val a2: 没有肉的锅#加肉[熟透的肉#需要热量#需要热量]#加肉[熟透的肉#需要热量]#加肉[熟透的肉#需要热量]#加肉[熟透的肉] = (throw new Exception("ii")): 柴2

  type 柴3 = 柴2#升温
  val a3: 没有肉的锅#加肉[熟透的肉#需要热量]#加肉[熟透的肉]#加肉[熟透的肉]#加肉[熟透的肉] = (throw new Exception("ii")): 柴3

  type 柴4 = 柴3#升温
  val a4: 没有肉的锅#加肉[熟透的肉]#加肉[熟透的肉]#加肉[熟透的肉]#加肉[熟透的肉] = (throw new Exception("ii")): 柴4

  type 柴5 = 柴4#升温
  val a5: 没有肉的锅#加肉[熟透的肉]#加肉[熟透的肉]#加肉[熟透的肉]#加肉[熟透的肉] = (throw new Exception("ii")): 柴5

}
